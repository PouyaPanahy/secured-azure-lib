# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest


stages:
- stage: Deploy_Resources
  jobs:
  - job: CredentialScanner
    displayName: "Scan for credentials"
    steps:
    - script: 'tzutil /s "W. Europe Standard Time"'
      displayName: 'Set Timezone to W. Europe'

    - task: CredScan@2
      inputs:
        toolMajorVersion: 'V2'

    - task: SdtReport@1
      inputs:
        AllTools: false
        BinSkim: false
        CredScan: true
        MSRD: false
        RoslynAnalyzers: false
        TSLint: false
        ToolLogsNotFoundAction: 'Standard'

    - task: PublishSecurityAnalysisLogs@2
      inputs:
        ArtifactName: 'CodeAnalysisLogs'
        ArtifactType: 'Container'
        AllTools: false
        AntiMalware: false
        BinSkim: false
        CredScan: true
        MSRD: false
        RoslynAnalyzers: false
        TSLint: false
        ToolLogsNotFoundAction: 'Standard'

    - task: PostAnalysis@1
      inputs:
        AllTools: false
        BinSkim: false
        CredScan: true
        RoslynAnalyzers: false
        TSLint: false
        ToolLogsNotFoundAction: 'Standard'

  - job: DeployArmTemplates
    displayName: "Deploy Arm Templates"
    steps:
    - task: AzureResourceManagerTemplateDeployment@3
      displayName: 'ARM Template deployment: Resources'
      inputs:
        azureResourceManagerConnection: 'Managed-rg-sp'
        subscriptionId: 'a6f564d4-e424-4cbb-b881-79aef78c437e'
        resourceGroupName: 'Managed-rg'
        location: 'West Europe'
        csmFile: 'Arm-Templates/resources.json'
        deploymentName: 'arm-cd-release'
    